# -*- coding: utf-8 -*-
"""tarea 5 progra

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1Feya46jVfjuCO_xBysnApzYUP7nGjyEd

##Ejercicio 1
"""

#Función que hace un vector con los valores de la diagonal de una matriz cuadrada.
def diagonal_principal(matriz:list[list[int]]):
  vector_diagonal=[]
  for i in range(len(matriz)):
    vector_diagonal.append(matriz[i][i])
  return vector_diagonal

#Función que lee los valores de cada entrada de la matriz.
def leer(nren,ncol):
  matriz=[]
  for i in range(nren):
    ren=[]
    print(f"Renglón {i+1}:")
    for s in range(ncol):
      valor=int(input(f"columna {s+1}\n Introduzca un valor: "))
      ren.append(valor)
    matriz.append(ren)
  print(matriz)
  return matriz

#Función que ejecuta el programa.
def main():

#Determina el tamaño de la matriz.
  print("Introduzca los datos de la matriz")
  nren=int(input("Introduzca el número de renglones: "))
  ncol=int(input("Introduzca el número de columnas: "))

  #Si la matriz es cuadrada se encuentra su diagonal
  if nren == ncol:
    matriz=leer(nren,ncol)
    vector_diagonal=diagonal_principal(matriz)
    print(f"La diagonal de su matriz es {vector_diagonal}")
  else:
  #Si no es cuadrada, se devuelve un mensaje de error.
    print("Su matriz no es cuadrada, no se puede sacar la diagonal. ")

#Si es el archivo original, se llama a la función main
if __name__ == "__main__":
  main()

"""##Ejercicio 2"""

#Función que encuentra el centro de una matriz y la guarda en un vector.
def centroMatriz(matriz: list[list[int]], ren, col):
    matrizSalida = []
    for i in range(1, ren - 1):
        vector = []
        for s in range(1, col - 1):
            vector.append(matriz[i][s])
        matrizSalida.append(vector)
    return matrizSalida

#Función que anexa los valores de las entradas de la matriz introducidas por el usuario.
def leer(nren, ncol):
    matriz = []
    for i in range(nren):
        ren = []
        print(f"Renglón {i+1}:")
        for s in range(ncol):
            valor = int(input(f"columna {s+1}\n Introduzca un valor: "))
            ren.append(valor)
        matriz.append(ren)
    print(matriz)
    return matriz

# Función que ejecuta el programa.
def main():
#Pide el tamaño de una matriz al usuario.
    print("Introduzca los datos de la matriz")
    nren = int(input("Introduzca el número de renglones: "))
    ncol = int(input("Introduzca el número de columnas: "))

#Da el centro de la matriz.
    matriz = leer(nren, ncol)
    matrizSalida = centroMatriz(matriz, nren, ncol)
    print(f"El centro de su matriz es {matrizSalida}")

#Si es el archivo original, se ejecuta la función main
if __name__ == "__main__":
    main()

"""##Ejercicio 3"""

#Función donde el usuario introduce los valores de las entradas de la matriz.
def leer(nren,ncol):
  matriz=[]
  for i in range(nren):
    ren=[]
    print(f"Renglón {i+1}:")
    for s in range(ncol):
      valor=int(input(f"columna {s+1}\n Introduzca un valor: "))
      ren.append(valor)
    matriz.append(ren)
  print(matriz)
  return matriz

#Función que intercambia el orden de las filas de la matriz.
  def cambiaRenglones(matriz: list[list[int]]):
    print("Ingrese los números de renglón a intercambiar:")
    ren1 = int(input("Primer renglón: ")) - 1
    ren2 = int(input("Segundo renglón: ")) - 1
#Si las filas no son iguales, se imprime un mensaje de error.
    if ren1 < 0 or ren2 < 0 or ren1 >= len(matriz) or ren2 >= len(matriz):
        print("Error")
        return matriz
    print(f"Intercambiando renglón {ren1 + 1} con renglón {ren2 + 1}...")


    for columna in range(len(matriz[0])):

        temp = matriz[ren1][columna]
        matriz[ren1][columna] = matriz[ren2][columna]
        matriz[ren2][columna] = temp

    return matriz
