# -*- coding: utf-8 -*-
"""Tarea 6 progra

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1nVXiCFlhBam3AI3iMceZTKTeqLmatRqA

##Ejercicio 1

###Cálculadora de determinante de una matriz

Importe la libreria sys


---


Defina una función **(calcular_determinante)** que calcule la determinante de una matriz, la cual tomará de parámetro una matriz y devolverá un número entero. Dentro de ella se deberán multiplicar los valors de las diagonales para después restarlos.



---



Defina otra función **(construir_matriz)** donde se cree una matriz 2x2 con los valores dados que devuelva una lista de listas con valores enteros o nada.

Dentro de ella deberán pedir los valores de cada fila convirtiendolos en enteros y separandolos con .split(). Posteriormente deberá verificar que sea una matriz sea 2x2, donde si es el caso se imprimirá un mensaje de error y no construirá la matriz.



---



Defina una última función **(principal)** que ejecute el programa. Dentro de ella imprima un mensaje de bienvenida, después mande a llamar la función matriz y guardela en una variable. Verifique si la matriz tiene algo dentro, si es así calcule su determinante e imprimala.



---



Finalmente, si este es el archivo original, mande a llamar la función principal
"""

import sys

def calcular_determinante(matriz: list[list[int]]) -> int: #Se usa de parámetro una matriz que tiene valores enteros.
    producto_ad = matriz[0][0] * matriz[1][1]
    producto_cb = matriz[1][0] * matriz[0][1]

    return producto_ad - producto_cb #Multiplica los valores de una matriz y despues resta su total.

def construir_matriz() -> list[list[int]] | None: #Función para construir una matriz que devuelve una matriz o nada.
    print("Ingrese los valores para la primera fila (2 valores, separados por espacios):")
    fila1 = [int(val) for val in input().split()] #Usa una compresión de lista con .split()(sirve para crear una lista de los valores separandolo por sus espacios) y las transforma en enteros.

    print("Ingrese los valores para la segunda fila (2 valores, separados por espacios):")
    fila2 = [int(val) for val in input().split()]

    if len(fila1) != 2 or len(fila2) != 2:
        print("Matrix is not a 2x2 matrix.")
        return None #Verifica que la matriz sea de 2x2, en caso que no sea así, no retorne nada.

    return [fila1, fila2]

def principal():
    print("--- Calculadora del Determinante de una matriz 2x2 ---")

    matriz = construir_matriz()#Le asigna la función de construir_matriz a la variable matriz

    if matriz is not None:
        determinante = calcular_determinante(matriz) #Calcula la determinante utilizando la función para ello y la asigna a la variable determinante

        print(f"\nEl determinante de la matriz {matriz} es: {determinante}") #Imprime el resultado
    else:
        pass

if __name__ == "__main__":
    principal() #Imprime la función principal() solo si es el archivo .py de origen

"""##Ejercicio 2

###Verificador de números primos en una matriz
Importa la libreria sys


---


Defina una función que verifique si un valor es primo o no **(es_primo)** la cual tome como parámetro un número entero y devuelva un dato booleano. Dentro de ella verifique que no sea menor o igual a 1, además que el número proporcionado solo sea divisible entre sí mismo y 1.


---


Después defina una función que cuente los números primos por fila **(contar_primos_por_fila)** y que como parámetro tome una lista de listas con valores enteros, deberá regresar una lista con valores enteros.


Dentro inicialice una lista **(conteo_primos)**, para después hacer un ciclo for anidado; en el primer nivel deberá crear una variable **(conteo_fila)**  y en el segundo nivel llamará a la función **es_primo** para sumar 1 a **conteo_fila** cada vez que la condición se cumpla.


---



Posteriormente defina una función **(principal)** que ejecute el programa completo.

Dentro de ella cree una matriz. Primero debe pedir el número de filas y columnas al usuario, y verificar que estos valores sean mayores a 0.

Debe inicializar una lista **(matriz)**,después usar un for anidado para que el usuario introduzca los valores de cada entrada de la matriz. En el primer nivel inicialice una lista **(filas)** e imprima en que fila se encuentra. En el segundo nivel solicite el el valor de cada una de las entradas y anexe el valor en la fila y posteriormente a la matriz.

Mande a llamar a la función **conteo_primos_por_fila** y asignele a una variable **(resultado)**.

Imprima la matriz creada y despúes el resultado de números primos por fila.  



---



Haga uso de un if para ejecutar la función **principal** solo si el código no es importado.
"""

import sys

def es_primo(n: int) -> bool: #Verifica que n sea primo y devuleve un valor booleano
    if n <= 1: #Si esto es verdadero, no es número primo
        return False
    if n <= 3: #Si esto es verdadero, es número primo
        return True
    if n % 2 == 0 or n % 3 == 0: #Si el mudulo de n entre 2 o 3 es igual a 0 no es primo
        return False

    i = 5
    while i * i <= n:
        if n % i == 0 or n % (i + 2) == 0:
            return False
        i += 6 #Sigue el ciclo para verificar si n es primo o no
    return True

def contar_primos_por_fila(matriz: list[list[int]]) -> list[int]: #Cuenta cuantos números primos hay por fila en una matriz, su parametro es una matriz y devuelve un entero
    conteo_primos = []

    for fila in matriz:
        conteo_fila = 0
        for numero in fila:
            if es_primo(numero):
                conteo_fila += 1

        conteo_primos.append(conteo_fila) #Agrega el conteo de primos por fila a matriz

    return conteo_primos

def principal(): #Crea la matriz, pidiendo numero de filas y columnas para después introducir los datos uno por uno.
    print(">>> ", end="")
    num_filas = int(input("Ingrese el número de filas de la matriz: ")) #Indica el numero de filas de tu matriz

    print(">>> ", end="")
    num_columnas = int(input("Ingrese el número de columnas de la matriz: ")) #Indica el número de columnas de tu matriz

    if num_filas <= 0 or num_columnas <= 0:
        print("Error: El número de filas y columnas debe ser positivo.") #verifica que los valores de filas y columnas sean válidos
        return

    print("\n--- Ingrese los datos de la matriz (un entero por línea) ---")
    matriz = []

    for i in range(num_filas):
        fila = []
        print(f"Fila {i+1}:")
        for j in range(num_columnas):
            print(">>> ", end="")
            valor = int(input())
            fila.append(valor)
        matriz.append(fila) #Agrega los valores de cada cordenada de la matriz

    resultado = contar_primos_por_fila(matriz) #Te induca cuantos primos hay por fila en tu matriz.

    print("\n--- Matriz Leída ---") #Imprime la matriz
    for fila in matriz:
        print(fila)

    print("\n--- Salida ---")
    print(f"Lista de cantidad de primos por fila: {resultado}") # Imprime cuantos primos hay en total en tu matriz

if __name__ == "__main__":
    principal() #Manda a llamar a la función principal para recibir cuantos valores primos hay en una matriz introducida
